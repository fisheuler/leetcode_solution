//You are given two strings s and t. 
//
// String t is generated by random shuffling string s and then add one more lett
//er at a random position. 
//
// Return the letter that was added to t. 
//
// 
// Example 1: 
//
// 
//Input: s = "abcd", t = "abcde"
//Output: "e"
//Explanation: 'e' is the letter that was added.
// 
//
// Example 2: 
//
// 
//Input: s = "", t = "y"
//Output: "y"
// 
//
// 
// Constraints: 
//
// 
// 0 <= s.length <= 1000 
// t.length == s.length + 1 
// s and t consist of lowercase English letters. 
// 
// Related Topics Hash Table String Bit Manipulation Sorting 
// 👍 2067 👎 355


//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public char findTheDifference(String s, String t) {

        char[] schars = new char[26];

        char[] tchars = new char[26];

        for(char ch: s.toCharArray()){
            schars[ch-'a']++;
        }

        for(char ch: t.toCharArray()){
            tchars[ch-'a']++;
        }

        for(int i = 0;i<26;i++){
            if(schars[i]!=tchars[i]){
                break;
            }
        }

        return (char)('a'+i);

    }


    public char findTheDifference(String s, String t) {

        return sum(s) - sum(t);

    }

    public int sum(String s){
        int sum = 0;
        for( char ch: s.toCharArray()){
            sum +=ch;
        }
        return sum;
    }

}
//leetcode submit region end(Prohibit modification and deletion)
